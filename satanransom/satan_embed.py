'''
Written by Jason Reaves - @sysopfb
Free to use, attribute properly.

'''
import sys
import pefile
import struct
import re

def decrypt(keystream, blob):
	for i in range(len(blob)):
		blob[i] ^= keystream[i%len(keystream)]

def rc4_crypt(data, sbox):
	S = list(sbox)
	out = []
 
	i = j = 0
	for char in data:
		i = ( i + 1 ) % 256
		j = ( j + S[i] ) % 256
		S[i] , S[j] = S[j] , S[i]
		out.append(chr(ord(char) ^ S[(S[i] + S[j]) % 256]))    
	return ''.join(out)



def decoder(data):
	conf = None
	#m = re.findall('''\x8a[\x82\x86]([\x00-\xff]{3}\x00)''', data)
	blob = None
	pe = pefile.PE(data=data)
	for section in pe.sections:
		if '.rdata' in section.Name:
			blob = section.get_data()
	if blob != None:
		temp = re.split('[\x00]{3,}', blob)
		temp = filter(lambda x: len(x) > 254, temp)
		found = None
		for val in temp:
			testdata = val[:-0x100]
			testkey = val[-0x100:]
			test = rc4_crypt(testdata, bytearray(testkey))
			if 'http' in test:
				found = test
				break

		if found == None:
			possible_keys = filter(lambda x: len(x) == 256, temp)
			possible_data = filter(lambda x: len(x) != 256, temp)
			for testkey in possible_keys:
				for testdata in possible_data:
					test = rc4_crypt(testdata, bytearray(testkey))
					if 'http' in test:
						found = test
						break
				if found != None:
					break
		if found != None:
			print("Found embed config!")
			urls = re.findall('https?:\/\/[a-zA-Z0-9\-\/\._]+', found)
			conf ={'urls': urls}


	return conf

if __name__ == "__main__":
	data = open(sys.argv[1],'rb').read()
	t = decoder(data)
	print(t)

