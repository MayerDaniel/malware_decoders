#include "RLEncryptor02.h"
#include <iostream>
#include <fstream>

using namespace std;

typedef unsigned char BYTE;

static UINT8 Settings_key_v3[20] = { 0x6b,0x2f,0x3d,0xa7, 0x98,0x92,0x61,0x16, 0xa6,0x3f,0x18,0x7b, 0x98,0x91,0xe0,0xd4, 0xbc,0x5a,0x63,0x82};
//static UINT8 Settings_key_v3[20] = { 0x5B,0x2f,0x1A,0xA7, 0x98,0x7E,0x43,0x16, 0xA6,0x05b,0x18,0x7B, 0x98,0x91,0xC0,0xD4, 0xBC,0x5A,0x95,0x73 };

int main()
{
	streampos size;
	RLEncryptor02 enc;
	char *memblock;
	ifstream file("data.bin", ios::in|ios::binary|ios::ate);
	if(file.is_open())
	{
		size = file.tellg();
		memblock = new char [size];
		file.seekg(0,ios::beg);
		file.read(memblock, size);
		file.close();
		enc.SetKey(Settings_key_v3, false);
		enc.Decrypt((BYTE*)memblock, size);

		ofstream outfile("out.bin", ios::out | ios::app | ios::binary);
		if(outfile.is_open())
		{
			outfile.write(memblock, size);
			outfile.close();
		} else cout << "Unable to open file for writing" << endl;
	} else cout << "Unable to open file for reading" << endl;


	return 0;
}
